{
    "swagger": "2.0",
    "info": {
        "description": "ðŸ“‰ groshi - damn simple tool to keep track of your finances.",
        "title": "groshi",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://github.com/groshi-project/groshi/blob/master/LICENSE"
        },
        "version": "0.1.0"
    },
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticates user, generates and returns valid JSON Web Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "Username and password",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.authLoginParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/handler.authLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body format or invalid request params",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "403": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns all categories created by user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Fetch all categories",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.categoriesGetResponseItem"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a new category and returns its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "description": "Category name",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.categoriesCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/handler.categoriesCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body format or invalid request params",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Creates a new transaction and returns its UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Create a new transaction",
                "parameters": [
                    {
                        "description": "Transaction",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.transactionsCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/handler.transactionsCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body format or invalid request params",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "403": {
                        "description": "Access to the category is forbidden",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns information about the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Retrieve information about the current user",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/handler.userGetResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new user and returns its username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "Username and password",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.userCreateParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/handler.userCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body format or invalid request params",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "409": {
                        "description": "User with such username already exists",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deletes the current user and returns its username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete the current user",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/handler.userDeleteResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.authLoginParams": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handler.authLoginResponse": {
            "type": "object",
            "properties": {
                "expires": {
                    "type": "string",
                    "example": "2034-03-20T12:57:38+02:00"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IldlbGwsIGlmIHlvdSBjYW4gcmVhZCB0aGlzLCB0aGVuIHlvdSBkZWZpbmV0ZWx5IHdvdWxkIGxpa2UgdGhpcyBvbmU6IGh0dHBzOi8veW91dHUuYmUvZFF3NHc5V2dYY1EifQ.1ervhGZz1m6xiHR447rbwh8W1sfATF2qYudOtNWhkkw"
                }
            }
        },
        "handler.categoriesCreateParams": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Transport"
                }
            }
        },
        "handler.categoriesCreateResponse": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "example": "c319d169-c7bd-4768-b61c-07f796dce3a2"
                }
            }
        },
        "handler.categoriesGetResponseItem": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Transport"
                },
                "uuid": {
                    "type": "string",
                    "example": "8b95b038-8a7a-4cdc-96b5-506101ed3a73"
                }
            }
        },
        "handler.transactionsCreateParams": {
            "type": "object",
            "required": [
                "amount",
                "currency",
                "timestamp"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "example": 2500
                },
                "category": {
                    "type": "string",
                    "example": "02983837-7ab0-492a-90b6-285491936067"
                },
                "currency": {
                    "type": "string",
                    "example": "USD"
                },
                "description": {
                    "type": "string",
                    "example": "Bought a donut for $2.5 only!"
                },
                "timestamp": {
                    "type": "string",
                    "example": "todo-timestamp"
                }
            }
        },
        "handler.transactionsCreateResponse": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "example": "3be1ed0a-c307-49de-872e-38730200f301"
                }
            }
        },
        "handler.userCreateParams": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "my-secret-password"
                },
                "username": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "handler.userCreateResponse": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "handler.userDeleteResponse": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "example": "jieggii"
                }
            }
        },
        "handler.userGetResponse": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "example": "jieggii"
                }
            }
        },
        "model.Error": {
            "type": "object",
            "properties": {
                "error_message": {
                    "type": "string",
                    "example": "example error message (who cares)"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}