{
    "swagger": "2.0",
    "info": {
        "description": "ðŸ“‰ groshi - goddamn simple tool to keep track of your finances.",
        "title": "groshi HTTP API documentation",
        "contact": {},
        "license": {
            "name": "Licensed under MIT license.",
            "url": "https://github.com/groshi-project/groshi/tree/master/LICENSE"
        },
        "version": "0.1.0"
    },
    "paths": {
        "/transactions": {
            "get": {
                "description": "Returns array of transactions for given time period.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "fetch many transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Beginning of the time period in RFC-3339 format.",
                        "name": "start_time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End of the time period in RFC-3339 format (current date is used by default if no value provided).",
                        "name": "end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of transaction objects is returned.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Transaction"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new transaction owned by current user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "create new transaction",
                "parameters": [
                    {
                        "description": "Negative or positive amount of transaction in minor units.",
                        "name": "amount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Currency code of transaction in ISO-4217 format.",
                        "name": "currency",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Description of transaction.",
                        "name": "description",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Date of transaction in RFC-3339 format.",
                        "name": "date",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object of newly created transaction is returned.",
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    }
                }
            }
        },
        "/transactions/summary": {
            "get": {
                "description": "Returns summary of transactions for given time period in desired currency units.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "fetch summary of transactions for given time period",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Beginning of the time period in RFC-3339 format.",
                        "name": "start_time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Desired currency of sum of transactions in ISO-4217 format.",
                        "name": "currency",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End of the time period in RFC-3339 format (current date is used by default if no value provided).",
                        "name": "end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Summary object is returned.",
                        "schema": {
                            "$ref": "#/definitions/models.Summary"
                        }
                    }
                }
            }
        },
        "/transactions/{uuid}": {
            "get": {
                "description": "Returns information about one transaction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "fetch one transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID of transaction.",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction object is returned.",
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    },
                    "403": {
                        "description": "You have no right to read this transaction.",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "404": {
                        "description": "Transaction was not found.",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates transaction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "update transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID of transaction.",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New negative or positive amount of transaction in minor units.",
                        "name": "new_amount",
                        "in": "body",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "New currency of transaction in ISO-4217 format.",
                        "name": "new_currency",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "New description of transaction.",
                        "name": "new_description",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "New date of transaction in RFC-3339 format.",
                        "name": "new_date",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated transaction object is returned.",
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    },
                    "403": {
                        "description": "You have no right to update the transaction.",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "404": {
                        "description": "Transaction was not found.",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes transaction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "delete transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID of transaction.",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted transaction object is returned.",
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    },
                    "403": {
                        "description": "You have no right to delete the transaction.",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "404": {
                        "description": "Transaction was not found.",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "Returns information about current user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "get information about current user",
                "responses": {
                    "200": {
                        "description": "Information about current user is returned.",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates username and/or password of current user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "update current user",
                "responses": {
                    "200": {
                        "description": "Information about current user is returned.",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "create new user",
                "parameters": [
                    {
                        "description": "Username for new user.",
                        "name": "username",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Password for new user.",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Username of the newly created user is returned.",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "409": {
                        "description": "User with such username already exists.",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes current user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "delete current user",
                "responses": {
                    "200": {
                        "description": "Object of deleted user is returned.",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Error": {
            "type": "object",
            "properties": {
                "error_details": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error_message": {
                    "type": "string",
                    "example": "example error message"
                }
            }
        },
        "models.Summary": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string",
                    "example": "USD"
                },
                "income": {
                    "type": "integer",
                    "example": 5000
                },
                "outcome": {
                    "type": "integer",
                    "example": 1000
                },
                "total": {
                    "type": "integer",
                    "example": 4000
                },
                "transactions_count": {
                    "type": "integer",
                    "example": 6
                }
            }
        },
        "models.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "example": -999
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-09-02T12:38:10+03:00"
                },
                "currency": {
                    "type": "string",
                    "example": "USD"
                },
                "date": {
                    "type": "string",
                    "example": "2023-09-02T12:38:10+03:00"
                },
                "description": {
                    "type": "string",
                    "example": "Bought some donuts for $9.99..."
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-09-02T12:38:10+03:00"
                },
                "uuid": {
                    "type": "string",
                    "example": "c81ab774-3f96-40e8-9ebd-170e303a682e"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "example": "pipka5000"
                }
            }
        }
    }
}