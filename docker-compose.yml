services:
  groshi:
    container_name: groshi
    build:
      context: ./

    environment:
      GROSHI_HOST: 0.0.0.0
      GROSHI_PORT: 8080

      GROSHI_SWAGGER: true

      GROSHI_BCRYPT_COST: 11
      GROSHI_JWT_SECRET_KEY_FILE: /run/secrets/groshi/jwt_secret_key
      GROSHI_JWT_TTL: 744h

      GROSHI_POSTGRES_HOST: groshi-postgres
      GROSHI_POSTGRES_PORT: 5432

      GROSHI_POSTGRES_USER_FILE: /run/secrets/postgres/user
      GROSHI_POSTGRES_PASSWORD_FILE: /run/secrets/postgres/password
      GROSHI_POSTGRES_DATABASE: groshi

    depends_on:
      groshi-postgres:
        condition: service_healthy

    ports:
      - "8080:8080"

    secrets:
      - groshi
      - postgres

  groshi-postgres:
    container_name: groshi-postgres
    image: postgres:16.2
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres/user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres/password
      POSTGRES_DB: groshi

    volumes:
      - ./.postgres-data:/var/lib/postgresql/data

    secrets:
      - postgres

    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "groshi"]  # todo: set username from docker secret
      interval: 2s
      timeout: 2s
      retries: 4
      start_period: 2s

secrets:
  groshi:
    file: ./.secrets/groshi

  postgres:
    file: ./.secrets/postgres
